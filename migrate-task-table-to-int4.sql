-- ====================================================
-- main_task_data 테이블 id를 uuid에서 int4로 변경
-- ====================================================

-- 1. 기존 테이블 삭제 (CASCADE로 관련 제약조건도 삭제)
DROP TABLE IF EXISTS main_task_data CASCADE;

-- 2. int4 id로 새 테이블 생성
CREATE TABLE main_task_data (
  id int4 GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  code varchar(100) UNIQUE NOT NULL,
  registration_date date,
  start_date date,
  completed_date date,
  department varchar(100),
  work_content text,
  description text,
  team varchar(100),
  assignee_id uuid,
  assignee_name varchar(100),
  progress int4 DEFAULT 0,
  status varchar(50) DEFAULT '대기',
  is_active boolean DEFAULT true,
  created_at timestamptz DEFAULT now(),
  updated_at timestamptz DEFAULT now()
);

-- 3. 인덱스 생성 (성능 최적화)
CREATE INDEX idx_main_task_code ON main_task_data(code);
CREATE INDEX idx_main_task_status ON main_task_data(status);
CREATE INDEX idx_main_task_team ON main_task_data(team);
CREATE INDEX idx_main_task_assignee_name ON main_task_data(assignee_name);
CREATE INDEX idx_main_task_is_active ON main_task_data(is_active);
CREATE INDEX idx_main_task_created_at ON main_task_data(created_at);

-- 4. RLS (Row Level Security) 활성화
ALTER TABLE main_task_data ENABLE ROW LEVEL SECURITY;

-- 5. RLS 정책 생성 (모든 사용자 접근 허용)
CREATE POLICY "모든 사용자가 조회 가능"
ON main_task_data FOR SELECT
USING (true);

CREATE POLICY "모든 사용자가 삽입 가능"
ON main_task_data FOR INSERT
WITH CHECK (true);

CREATE POLICY "모든 사용자가 수정 가능"
ON main_task_data FOR UPDATE
USING (true);

CREATE POLICY "모든 사용자가 삭제 가능"
ON main_task_data FOR DELETE
USING (true);

-- 6. 테이블 정보 확인
SELECT
  column_name,
  data_type,
  is_nullable,
  column_default
FROM information_schema.columns
WHERE table_name = 'main_task_data'
ORDER BY ordinal_position;

-- 완료 메시지
DO $$
BEGIN
  RAISE NOTICE '✅ main_task_data 테이블이 int4 id로 재생성되었습니다!';
END $$;
